{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Sparrow SMS API 2.0 Documentation Last updated - 18th December, 2014 Sparrow SMS is a leading VAS Provider based in Nepal. It currently provides SMS Gateway connectivity with the telecom operators of Nepal, currently supporting the following operators 1. Nepal Telecom (GSM + CDMA) 2. Ncell 3. United Telecom 4. Smart Telecom Sparrow SMS provides both MT and MO APIs and supports with integration when required. (Version 2.0) API supports RESTFUL support. Contact Details: Email: marketing@janakitech.com Phone: 01-5522942 / 9802005008 Check the latest API Documentation Jump to Examples","title":"Home"},{"location":"#sparrow-sms-api-20-documentation","text":"Last updated - 18th December, 2014 Sparrow SMS is a leading VAS Provider based in Nepal. It currently provides SMS Gateway connectivity with the telecom operators of Nepal, currently supporting the following operators 1. Nepal Telecom (GSM + CDMA) 2. Ncell 3. United Telecom 4. Smart Telecom Sparrow SMS provides both MT and MO APIs and supports with integration when required. (Version 2.0) API supports RESTFUL support.","title":"Sparrow SMS API 2.0 Documentation"},{"location":"#contact-details","text":"Email: marketing@janakitech.com Phone: 01-5522942 / 9802005008 Check the latest API Documentation Jump to Examples","title":"Contact Details:"},{"location":"documentation/","text":"You can signup or login to the dashboard using following link: http://beta.sparrowsms.com API Endpoint Sparrow SMS receives requests via a single standard endpoint as below: URL : api.sparrowsms.com/v2 1. Outgoing Our outgoing API enables you to send sms, get credits details. i. Send SMS Outgoing or Push or MT (Mobile Terminated) messages are sent from Sparrow SMS Gateway server to the intended recipients mobile phone. Check documentation ii. Credits Check available, consumed credits in Sparrow SMS account Check documentation 2. Incoming Our incoming API enables you to recieve sms, process request and reply back with reply. Check documentation","title":"Documentation"},{"location":"documentation/#api-endpoint","text":"Sparrow SMS receives requests via a single standard endpoint as below: URL : api.sparrowsms.com/v2","title":"API Endpoint"},{"location":"documentation/#1-outgoing","text":"Our outgoing API enables you to send sms, get credits details.","title":"1. Outgoing"},{"location":"documentation/#i-send-sms","text":"Outgoing or Push or MT (Mobile Terminated) messages are sent from Sparrow SMS Gateway server to the intended recipients mobile phone. Check documentation","title":"i. Send SMS"},{"location":"documentation/#ii-credits","text":"Check available, consumed credits in Sparrow SMS account Check documentation","title":"ii. Credits"},{"location":"documentation/#2-incoming","text":"Our incoming API enables you to recieve sms, process request and reply back with reply. Check documentation","title":"2. Incoming"},{"location":"examples/","text":"HTTP Request Examples Mobile Terminated (Push SMS) Outgoing or Push or MT (Mobile Terminated) messages are sent from Sparrow SMS Gateway server to the intended recipients mobile phone. Proceed to examples Credits API Credits API provides access to the available credits, consumed credits, credit policy and expiry information. Proceed to examples Mobile Originated Incoming or Pull or MO (Mobile Originated) messages are received to Sparrow SMS Gateway server, when a mobile phone sends some text to one of our shortcodes. Proceed to examples","title":"Examples"},{"location":"examples/#http-request-examples","text":"","title":"HTTP Request Examples"},{"location":"examples/#mobile-terminated-push-sms","text":"Outgoing or Push or MT (Mobile Terminated) messages are sent from Sparrow SMS Gateway server to the intended recipients mobile phone. Proceed to examples","title":"Mobile Terminated (Push SMS)"},{"location":"examples/#credits-api","text":"Credits API provides access to the available credits, consumed credits, credit policy and expiry information. Proceed to examples","title":"Credits API"},{"location":"examples/#mobile-originated","text":"Incoming or Pull or MO (Mobile Originated) messages are received to Sparrow SMS Gateway server, when a mobile phone sends some text to one of our shortcodes. Proceed to examples","title":"Mobile Originated"},{"location":"examples_credits/","text":"Examples (Credits) Curl curl -s http://api.sparrowsms.com/v2/credit/ \\ -F token='<token-provided>' \\ Php $api_url = \"http://api.sparrowsms.com/v2/credit/?\". http_build_query(array( 'token' => '<token-provided>', $response = file_get_contents($api_url); Python import requests r = requests.get( \"http://api.sparrowsms.com/v2/credit/\", params={'token' : '<token-provided>'}) status_code = r.status_code response = r.text response_json = r.json() C# (C-sharp) using System.Collections.Specialized; using System.IO; using System.Net; using System.Text; namespace SparrowSMSTest{ class Program{ static void Main(string[] args) { var getResponseTest = GetCredits('<token-provided>'); } private static string GetCredits(string token) { using (var client = new WebClient()) { string parameters = \"?\"; parameters += \"token=\" + token; var responseString = client.DownloadString(\"http://api.sparrowsms.com/v2/credit/\" + parameters); return responseString; } } }","title":"Credits Examples"},{"location":"examples_credits/#examples-credits","text":"","title":"Examples (Credits)"},{"location":"examples_credits/#curl","text":"curl -s http://api.sparrowsms.com/v2/credit/ \\ -F token='<token-provided>' \\","title":"Curl"},{"location":"examples_credits/#php","text":"$api_url = \"http://api.sparrowsms.com/v2/credit/?\". http_build_query(array( 'token' => '<token-provided>', $response = file_get_contents($api_url);","title":"Php"},{"location":"examples_credits/#python","text":"import requests r = requests.get( \"http://api.sparrowsms.com/v2/credit/\", params={'token' : '<token-provided>'}) status_code = r.status_code response = r.text response_json = r.json()","title":"Python"},{"location":"examples_credits/#c-c-sharp","text":"using System.Collections.Specialized; using System.IO; using System.Net; using System.Text; namespace SparrowSMSTest{ class Program{ static void Main(string[] args) { var getResponseTest = GetCredits('<token-provided>'); } private static string GetCredits(string token) { using (var client = new WebClient()) { string parameters = \"?\"; parameters += \"token=\" + token; var responseString = client.DownloadString(\"http://api.sparrowsms.com/v2/credit/\" + parameters); return responseString; } } }","title":"C# (C-sharp)"},{"location":"examples_incoming/","text":"Examples (Incoming SMS) Php // STEP 1 // incoming request parameters $from = $_GET[\"from\"]; // sms sender $to = $_GET[\"to\"]; // shortcode $keyword = $_GET[\"keyword\"]; // first word $text = $_GET[\"text\"]; // the complete text $timestamp = time(); // STEP 2 // build your logic on how to respond the incoming request switch($keyword){ case \"one\": $reply = \"You (\". $from .\") have been subscribed to campaign one\"; break; case \"two\": $reply = \"You (\". $from .\") have been subscribed to campaign two\"; break; default: $reply = \"Invalid campaign name\"; break; } // STEP 3 // may be you need to save the request to your own database // @optional mysql_connect(\"localhost\", \"username\", \"password\"); mysql_select_db(\"sparrow_sms\"); mysql_query(\"insert into logs_incoming (`from`, `to`, `keyword`, `text`, `timestamp`) values ('\".mysql_real_escape_string($from).\"', '\".mysql_real_escape_string($to).\"', '\".mysql_real_escape_string($keyword).\"', '\".mysql_real_escape_string($text).\"', '\".$timestamp.\"' )\"); // STEP 4 // send reply back to Sparrow SMS // This has to be STRICTLY 160 chars (max) die($reply);","title":"Pull SMS (MO) Examples"},{"location":"examples_incoming/#examples-incoming-sms","text":"","title":"Examples (Incoming SMS)"},{"location":"examples_incoming/#php","text":"// STEP 1 // incoming request parameters $from = $_GET[\"from\"]; // sms sender $to = $_GET[\"to\"]; // shortcode $keyword = $_GET[\"keyword\"]; // first word $text = $_GET[\"text\"]; // the complete text $timestamp = time(); // STEP 2 // build your logic on how to respond the incoming request switch($keyword){ case \"one\": $reply = \"You (\". $from .\") have been subscribed to campaign one\"; break; case \"two\": $reply = \"You (\". $from .\") have been subscribed to campaign two\"; break; default: $reply = \"Invalid campaign name\"; break; } // STEP 3 // may be you need to save the request to your own database // @optional mysql_connect(\"localhost\", \"username\", \"password\"); mysql_select_db(\"sparrow_sms\"); mysql_query(\"insert into logs_incoming (`from`, `to`, `keyword`, `text`, `timestamp`) values ('\".mysql_real_escape_string($from).\"', '\".mysql_real_escape_string($to).\"', '\".mysql_real_escape_string($keyword).\"', '\".mysql_real_escape_string($text).\"', '\".$timestamp.\"' )\"); // STEP 4 // send reply back to Sparrow SMS // This has to be STRICTLY 160 chars (max) die($reply);","title":"Php"},{"location":"examples_outgoing/","text":"Examples (Outgoing SMS) Curl curl -s http://api.sparrowsms.com/v2/sms/ \\ -F token='<token-provided>' \\ -F from='<Identity>' \\ -F to='<comma_separated 10-digit mobile numbers>' \\ -F text='SMS Message to be sent' Php GET Method: $api_url = \"http://api.sparrowsms.com/v2/sms/?\". http_build_query(array( 'token' => '<token-provided>', 'from' => '<Identity>', 'to' => '<comma_separated 10-digit mobile numbers>', 'text' => 'SMS Message to be sent')); $response = file_get_contents($api_url); Example: http_build_query(array( 'token' => 'aslkd1232adkadsf', 'from' => \u2018Demo', 'to' => \u20189802005009', 'text' => \u2018Hello! This is a test message from Sparrow SMS')); POST Method: $args = http_build_query(array( 'token' => '<token-provided>', 'from' => '<Identity>', 'to' => '<comma_separated 10-digit mobile numbers>', 'text' => 'SMS Message to be sent')); $url = \"http://api.sparrowsms.com/v2/sms/\"; # Make the call using API. $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_POST, 1); curl_setopt($ch, CURLOPT_POSTFIELDS,$args); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); // Response $response = curl_exec($ch); $status_code = curl_getinfo($ch, CURLINFO_HTTP_CODE); curl_close($ch); Python GET Method: import requests r = requests.get( \"http://api.sparrowsms.com/v2/sms/\", params={'token' : '<token-provided>', 'from' : '<Identity>', 'to' : '<comma_separated 10-digit mobile numbers>', 'text' : 'SMS Message to be sent'}) status_code = r.status_code response = r.text response_json = r.json() POST Method: import requests r = requests.post( \"http://api.sparrowsms.com/v2/sms/\", data={'token' : '<token-provided>', 'from' : '<Identity>', 'to' : '<comma_separated 10-digit mobile numbers>', 'text' : 'SMS Message to be sent'}) status_code = r.status_code response = r.text response_json = r.json() C# (C-sharp) GET Method: using System.Collections.Specialized; using System.IO; using System.Net; using System.Text; namespace SparrowSMSTest{ class Program{ static void Main(string[] args) { var getResponseTest = GetSendSMS('<Identity>', '<token-provided>', '<comma_separated 10-digit mobile numbers>', 'SMS Message to be sent'); } private static string GetSendSMS(string from, string token, string to, string text) { using (var client = new WebClient()) { string parameters = \"?\"; parameters += \"from=\" + from; parameters += \"&to=\" + to; parameters += \"&text=\" + text; parameters += \"&token=\" + token; var responseString = client.DownloadString(\"http://api.sparrowsms.com/v2/sms/\" + parameters); return responseString; } } } POST Method: using System.Collections.Specialized; using System.Net; using System.Text; namespace SparrowSMSTest{ class Program{ static void Main(string[] args){ var responseTest = PostSendSMS('<Identity>', '<token-provided>', '<comma_separated 10-digit mobile numbers>', 'SMS Message to be sent'); } private static string PostSendSMS(string from, string token, string to, string text){ using (var client = new WebClient()){ var values = new NameValueCollection(); values[\"from\"] = from; values[\"token\"] = token; values[\"to\"] = to; values[\"text\"] = text; var response = client.UploadValues(\"http://api.sparrowsms.com/v2/sms/\", \"Post\", values); var responseString = Encoding.Default.GetString(response); return responseString; } } } }","title":"Push SMS (MT) Examples"},{"location":"examples_outgoing/#examples-outgoing-sms","text":"","title":"Examples (Outgoing SMS)"},{"location":"examples_outgoing/#curl","text":"curl -s http://api.sparrowsms.com/v2/sms/ \\ -F token='<token-provided>' \\ -F from='<Identity>' \\ -F to='<comma_separated 10-digit mobile numbers>' \\ -F text='SMS Message to be sent'","title":"Curl"},{"location":"examples_outgoing/#php","text":"GET Method: $api_url = \"http://api.sparrowsms.com/v2/sms/?\". http_build_query(array( 'token' => '<token-provided>', 'from' => '<Identity>', 'to' => '<comma_separated 10-digit mobile numbers>', 'text' => 'SMS Message to be sent')); $response = file_get_contents($api_url); Example: http_build_query(array( 'token' => 'aslkd1232adkadsf', 'from' => \u2018Demo', 'to' => \u20189802005009', 'text' => \u2018Hello! This is a test message from Sparrow SMS')); POST Method: $args = http_build_query(array( 'token' => '<token-provided>', 'from' => '<Identity>', 'to' => '<comma_separated 10-digit mobile numbers>', 'text' => 'SMS Message to be sent')); $url = \"http://api.sparrowsms.com/v2/sms/\"; # Make the call using API. $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_POST, 1); curl_setopt($ch, CURLOPT_POSTFIELDS,$args); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); // Response $response = curl_exec($ch); $status_code = curl_getinfo($ch, CURLINFO_HTTP_CODE); curl_close($ch);","title":"Php"},{"location":"examples_outgoing/#python","text":"GET Method: import requests r = requests.get( \"http://api.sparrowsms.com/v2/sms/\", params={'token' : '<token-provided>', 'from' : '<Identity>', 'to' : '<comma_separated 10-digit mobile numbers>', 'text' : 'SMS Message to be sent'}) status_code = r.status_code response = r.text response_json = r.json() POST Method: import requests r = requests.post( \"http://api.sparrowsms.com/v2/sms/\", data={'token' : '<token-provided>', 'from' : '<Identity>', 'to' : '<comma_separated 10-digit mobile numbers>', 'text' : 'SMS Message to be sent'}) status_code = r.status_code response = r.text response_json = r.json()","title":"Python"},{"location":"examples_outgoing/#c-c-sharp","text":"GET Method: using System.Collections.Specialized; using System.IO; using System.Net; using System.Text; namespace SparrowSMSTest{ class Program{ static void Main(string[] args) { var getResponseTest = GetSendSMS('<Identity>', '<token-provided>', '<comma_separated 10-digit mobile numbers>', 'SMS Message to be sent'); } private static string GetSendSMS(string from, string token, string to, string text) { using (var client = new WebClient()) { string parameters = \"?\"; parameters += \"from=\" + from; parameters += \"&to=\" + to; parameters += \"&text=\" + text; parameters += \"&token=\" + token; var responseString = client.DownloadString(\"http://api.sparrowsms.com/v2/sms/\" + parameters); return responseString; } } } POST Method: using System.Collections.Specialized; using System.Net; using System.Text; namespace SparrowSMSTest{ class Program{ static void Main(string[] args){ var responseTest = PostSendSMS('<Identity>', '<token-provided>', '<comma_separated 10-digit mobile numbers>', 'SMS Message to be sent'); } private static string PostSendSMS(string from, string token, string to, string text){ using (var client = new WebClient()){ var values = new NameValueCollection(); values[\"from\"] = from; values[\"token\"] = token; values[\"to\"] = to; values[\"text\"] = text; var response = client.UploadValues(\"http://api.sparrowsms.com/v2/sms/\", \"Post\", values); var responseString = Encoding.Default.GetString(response); return responseString; } } } }","title":"C# (C-sharp)"},{"location":"incoming/","text":"Receive SMS / Incoming / Pull / MO (Mobile Originated) Shortcode Shortcode is four digit number to which user can send SMS from any telecom. Benefits of Shortcodes are: 1. Easy to remember 2. Provides direct connectivity to Telecom 3. Shortcode can have different tarrifs like (Rs. 1-5) Keyword First word of SMS sent by user is Keyword, it is used to identify the action / service requested. Sub Keyword Second Keyword of SMS sent by user is called Sub Keyword. Its optional and depends upon the campaign Parameters Settings URL : Public URL where the incoming SMS has to be forwarded. Keyword : Keyword that has to be forwarded. Shortcode : Shortcode to which, user has to send SMS. Default Reply : Default response that has to be sent to user, incase request to url fail. Request GET request is sent to the URL provided with following arguments: from : Subscribers number sending SMS. to : Shortcode to which subscriber has sent SMS. text : Complete SMS sent by user. keyword : Keyword of SMS sent. Response URL must process the request and send text response of maximum 160 characters with status code 200 or 202. Incase of any other response code, default reply will be sent to user as SMS reply. Proceed to examples","title":"Pull SMS (MO)"},{"location":"incoming/#receive-sms-incoming-pull-mo-mobile-originated","text":"","title":"Receive SMS / Incoming / Pull / MO (Mobile Originated)"},{"location":"incoming/#shortcode","text":"Shortcode is four digit number to which user can send SMS from any telecom. Benefits of Shortcodes are: 1. Easy to remember 2. Provides direct connectivity to Telecom 3. Shortcode can have different tarrifs like (Rs. 1-5)","title":"Shortcode"},{"location":"incoming/#keyword","text":"First word of SMS sent by user is Keyword, it is used to identify the action / service requested.","title":"Keyword"},{"location":"incoming/#sub-keyword","text":"Second Keyword of SMS sent by user is called Sub Keyword. Its optional and depends upon the campaign","title":"Sub Keyword"},{"location":"incoming/#parameters","text":"Settings URL : Public URL where the incoming SMS has to be forwarded. Keyword : Keyword that has to be forwarded. Shortcode : Shortcode to which, user has to send SMS. Default Reply : Default response that has to be sent to user, incase request to url fail. Request GET request is sent to the URL provided with following arguments: from : Subscribers number sending SMS. to : Shortcode to which subscriber has sent SMS. text : Complete SMS sent by user. keyword : Keyword of SMS sent.","title":"Parameters"},{"location":"incoming/#response","text":"URL must process the request and send text response of maximum 160 characters with status code 200 or 202. Incase of any other response code, default reply will be sent to user as SMS reply. Proceed to examples","title":"Response"},{"location":"outgoing_credits/","text":"Credits It can be used to know about the available credits, consumed credits. Supported HTTP request method: GET Method /credit/ Parameters token : Token generated from our website. Responses Valid Response Status Code: 200 Response Message: { \"credits_available\" : <credits-available>, \"credits_consumed\" : <credits-consumed>, \"response_code\" : 200 } Invalid Response Status Code: 403 Error Messages: {\"response_code\":1001,\"response\":\"Invalid IP Address\"} {\"response_code\":1002,\"response\":\"Invalid Token\"} {\"response_code\":1003,\"response\":\"Account Inactive\"} {\"response_code\":1004,\"response\":\"Account Inactive\"} {\"response_code\":1005,\"response\":\"Account has been expired\"} {\"response_code\":1006,\"response\":\"Account has been expired\"} {\"response_code\":1012,\"response\":\"No Credits Available\"} Proceed to examples","title":"Credits"},{"location":"outgoing_credits/#credits","text":"It can be used to know about the available credits, consumed credits.","title":"Credits"},{"location":"outgoing_credits/#supported-http-request-method","text":"GET","title":"Supported HTTP request method:"},{"location":"outgoing_credits/#method","text":"/credit/","title":"Method"},{"location":"outgoing_credits/#parameters","text":"token : Token generated from our website.","title":"Parameters"},{"location":"outgoing_credits/#responses","text":"","title":"Responses"},{"location":"outgoing_credits/#valid-response","text":"Status Code: 200 Response Message: { \"credits_available\" : <credits-available>, \"credits_consumed\" : <credits-consumed>, \"response_code\" : 200 }","title":"Valid Response"},{"location":"outgoing_credits/#invalid-response","text":"Status Code: 403 Error Messages: {\"response_code\":1001,\"response\":\"Invalid IP Address\"} {\"response_code\":1002,\"response\":\"Invalid Token\"} {\"response_code\":1003,\"response\":\"Account Inactive\"} {\"response_code\":1004,\"response\":\"Account Inactive\"} {\"response_code\":1005,\"response\":\"Account has been expired\"} {\"response_code\":1006,\"response\":\"Account has been expired\"} {\"response_code\":1012,\"response\":\"No Credits Available\"} Proceed to examples","title":"Invalid Response"},{"location":"outgoing_sendsms/","text":"Send SMS / Outgoing / Push / MT (Mobile Terminated) Supported HTTP request methods: GET POST Method /sms/ Parameters Mandatory Fields token : Token generated from our website. from : It should be the identity provided to you. to : Comma Separated 10-digit mobile numbers. text : SMS Message to be sent. Optional Fields Responses Valid Response Status Code: 200 Response Message: { \"count\": number_of_sms_sent, \"response_code\": 200, \"response\": \"number_of_sms_sent mesages has been queued for delivery\" } Invalid Response Status Code: 403 Error Messages: {\"response_code\":1000,\"response\":\"A required field is missing\"} {\"response_code\":1001,\"response\":\"Invalid IP Address\"} {\"response_code\":1002,\"response\":\"Invalid Token\"} {\"response_code\":1003,\"response\":\"Account Inactive\"} {\"response_code\":1004,\"response\":\"Account Inactive\"} {\"response_code\":1005,\"response\":\"Account has been expired\"} {\"response_code\":1006,\"response\":\"Account has been expired\"} {\"response_code\":1007,\"response\":\"Invalid Receiver\"} {\"response_code\":1008,\"response\":\"Invalid Sender\"} {\"response_code\":1010,\"response\":\"Text cannot be empty\"} {\"response_code\":1011,\"response\":\"No valid receiver\"} {\"response_code\":1012,\"response\":\"No Credits Available\"} {\"response_code\":1013,\"response\":\"Insufficient Credits\"} Proceed to examples","title":"Push SMS (MT)"},{"location":"outgoing_sendsms/#send-sms-outgoing-push-mt-mobile-terminated","text":"","title":"Send SMS / Outgoing / Push / MT (Mobile Terminated)"},{"location":"outgoing_sendsms/#supported-http-request-methods","text":"GET POST","title":"Supported HTTP request methods:"},{"location":"outgoing_sendsms/#method","text":"/sms/","title":"Method"},{"location":"outgoing_sendsms/#parameters","text":"Mandatory Fields token : Token generated from our website. from : It should be the identity provided to you. to : Comma Separated 10-digit mobile numbers. text : SMS Message to be sent. Optional Fields","title":"Parameters"},{"location":"outgoing_sendsms/#responses","text":"","title":"Responses"},{"location":"outgoing_sendsms/#valid-response","text":"Status Code: 200 Response Message: { \"count\": number_of_sms_sent, \"response_code\": 200, \"response\": \"number_of_sms_sent mesages has been queued for delivery\" }","title":"Valid Response"},{"location":"outgoing_sendsms/#invalid-response","text":"Status Code: 403 Error Messages: {\"response_code\":1000,\"response\":\"A required field is missing\"} {\"response_code\":1001,\"response\":\"Invalid IP Address\"} {\"response_code\":1002,\"response\":\"Invalid Token\"} {\"response_code\":1003,\"response\":\"Account Inactive\"} {\"response_code\":1004,\"response\":\"Account Inactive\"} {\"response_code\":1005,\"response\":\"Account has been expired\"} {\"response_code\":1006,\"response\":\"Account has been expired\"} {\"response_code\":1007,\"response\":\"Invalid Receiver\"} {\"response_code\":1008,\"response\":\"Invalid Sender\"} {\"response_code\":1010,\"response\":\"Text cannot be empty\"} {\"response_code\":1011,\"response\":\"No valid receiver\"} {\"response_code\":1012,\"response\":\"No Credits Available\"} {\"response_code\":1013,\"response\":\"Insufficient Credits\"} Proceed to examples","title":"Invalid Response"}]}